ISO/OSI参考模型
	OSI(open system interconnection)开放系统互联模型是由ISO国际标准化组织定义的网络分层模型，共分七层.

	物理层:物理层定义了所有的电子及物理设备的规范，为上层传输提供了一个物理介质，本层中数据传输单位是bit，本层的规范有RJ45等，实际使用中的设备如网卡.
	数据链路层:对物理层收到的比特流进行数据成帧，提供可靠的数据传输服务,实现误差错的数据传输。在数据链路层中的数据的单位是帧(frame),本层的规范有SOLC,HDLC,PPP,帧中继等，实际使用的设备switch属于本层。
	网络层:网络层负责将各个子网之间的数据进行路由选择，分组与重组，本层的数据传输单位为数据包，数据本层的协议有IP,ICMP,IGMP等，实际使用的设备是路由器
	传输层:提供可靠的传输服务，它检测到路由器丢的包，然后产生一个重传请求，能够将乱续收到的数据重新排序。
	会话层:管理主机之间的会话过程，包括建立，终止和会话过程的管理
	表示层:表示层对网络传输的数据进行变换，使得多个主机之间传递的信息能够相互理解，包括数据的压缩，加密，格式转换等.
	应用层:应用层与应用程序的界面沟通，以达到展示给用户的目的。常见的协议有HTTP,HTTPS,FTP,TELNET,SSH等

端口
	IP只能标识主机，但不能标识具体的服务，当数据到达主机时，如何知道给哪个应用程序，就需要用端口
	众所周知端口:0~1023 ,由IANA分配和控制
	注册端口:1024-49151不受IANA控制，但是IANA登记并提供使用情况的清单,MySQL 3306 Oracle 1521 SQLServer 1433
	私有端口(49152-65535)

MTU
	以太网对数据帧的长度有限制，其最大值是1500字节，这个限制称作最大传输单元MTU.
	如果IP层有一个数据要传，而且数据的长度比链路层的MTU要大，那么IP层就要进行分片，把数据包分成若干片，这样每片都小于MTU。
	当网络上两台主机相互进行通信时，两台主机之间要经过多个网络，每个每个网络的链路层可能有不同的MTU，其中两台通信主机路径中的最小MTU被称作路径MTU。

ping的传输过程
1.应用程序ping会判断发送的目的是主机名还是ip地址，如果是主机名，通过调用gethostbyname解析主机，将主机名转换成IP地址
2.ping程序向目标IP地址发送一个ICMP echo 包
3.将目标机器的IP地址转换成48位MAC地址，在局域网内发送ARP请求广播，查找主机B的MAC地址
4.主机B的arp协议层收到主机A的ARP请求后，将本机的MAC地址填充到应答包，发送ARP应答到主机A。
5.发送ICMP数据包到主机B
6.主机B收到ICMP包，发送响应包
7.主机A接受ICMP响应包

IP数据包格式：
	版本：ip协议版本号，长度4位，ipv4此字段值为4，ipv6此字段值为6
	首部长度：以32位的字节为单位，该字段长度为4位，最大值为15，所以首部长度最大为60字节
	TOS:长度8位，此字段包含3位优先权(已忽略)，4位服务类型，1位保留位(必须是0)，4位服务类型分别代表最小延迟(D)，最大吞吐量(T),最高可靠性(R),最小费用(F).
	总长度：该字段长度16位，以字节为单位，该字段包含IP头部和数据部分，所以IP数据包最大可以达到65535个字节
	标识：16位，用来标识一个IP包，每发送一个这个字段就会加1.
	3位标志：第一位不用，第二位DF(Don't
Fragment)，该字段如果置1，如果传输的数据大于MTU，该数据包会丢弃，发送一个ICMP差错报文,第三为MF(More Fragment)表示是否有更多的分片，该位为1，说明有后续分片，最后一片MF为0
	IP分片后每个包都具有自己的IP首部，但片偏移值不同，通过片偏移值接受端可以重新组装IP包
	TTL:(Time To Live)表示数据报最多可经过的路由器数量，数据包每经过一个路由器，TTL就减1,减到0时就丢弃，并且发送ICMP报文通知源主机，TTL可以避免数据报在路由器之间不断循环。
	协议类型：表示IP层上承载的是哪个高级协议，在封装和分用的过程中，协议栈知道交给哪个协议处理，ICMP，IGMP，TCP，UDP，SCTP
	头部校验和：保证数据包头部的数据完整性，但校验和不包括数据部分，这样目的有两个：一是所有数据封装在IP数据包中的高层协议均含有覆盖整个数据的校验和，因此IP数据包没有必要再对其重载的数据部分进行校验，二是每经过一个路由器，IP数据包的头部都要发生改变，而数据部分不变，这样只对发生改变的头部进行校验，显然不会浪费太多时间，减少了计算时间，用的是网际校验和
	源IP地址
	目的IP地址

TCP特点：
	基于字节流的(没有边界) 一次发送，可能会两次或多次接收，粘包
	面向连接(先连接再传输数据)
	可靠传输(保证数据不会失序，不会重复)
	缓存传输(不会立即传输，选择最佳时机传数据)
	全双工
	流量控制(窗口机制)

TCP数据包格式
	源端口号和目的端口号,加上源IP地址和目的IP地址唯一确定一个TCP连接。
	序号：表示在这个报文段中的第一个数据字节序号
	确认号：仅当ACK为1才有效，确认号表示期望收到的下一个字节的序号。
	头部长度：4位，TCP头部最多60个字节
	保留位：6位，必须为0
	标志位:
		URG 紧急指针有效
		ACK 确认号有效
		PSH 接受放应尽快的将数据交给应用程序
		RST 连接重置
		SYN 同步序号，用来发起一个连接
		FIN 终止一个连接
	窗口大小：通过窗口大小来达到流量控制
	校验和: TCP头和数据进行校验
	紧急指针：是一个正的偏移量，与序号字段中的值相加，表示紧急数据的最后一个字节的序号，
	TCP如何保证可靠
		不可靠 差错  失序  重复 丢包
	
	.应用数据被分割成TCP层认为最合适发送的数据块，称为段传递给IP层
	.当TCP发出一个段后，它启动一个定时器，等待目的端确认收到这个数据段，如果不能及时收到一个确认，将重发这个报文段
	.当TCP收到发自TCP连接另一端的数据，它将发送一个确认，这个确认不是立即发送，通常将推迟几分之一秒。
	.TCP将保持他首部和数据校验和，这是一个端到端的校验和，目的是检测在数据传输过程中的任何变化，如果收到段的校验和有错误，TCP将丢弃这个报文段并且不确认(导致对方超时重传)
	.TCP承载与IP数据报来传输，而IP数据报的到达可能会失序，因此TCP报文段的到达也可能会失序，TCP将对收到的数据进行重新排序
	.IP数据包会发生重发，TCP的接受端必须丢弃重发的数据
	.TCP还提供流量控制。












