UDP特点:
	无连接
	不可靠
	一般情况下UDP效率更高

什么是socket
	socket可以看成是用户进程和内核网络协议栈的编程接口
IPv4套接字地址结构
	struct sockaddr_in {
		uint8_t sin_len;
		sa_family_t sin_family; //地址家族 AF_INET
    	in_port_t sin_port;     /* Port number.  */
    	struct in_addr sin_addr;/* Internet address.  */
		unsigned char sin_zero[8]; //不使用
	};
	typedef uint32_t in_addr_t;
	struct in_addr {
		in_addr_t s_addr;
	};
通用的套接字地址结构
	struct sockaddr {
		uint8_t sin_len;
		sa_family_t sin_family;
		char sa_data[14];
	};

字节序转换
		uint32_t htonl(uint32_t hostlong);
		uint16_t htons(uint16_t hostshort);
		uint32_t ntohl(uint32_t netlong);
		uint16_t ntohs(uint16_t netshort);
h : host
n : net
l : long
s : short

地址转换函数：人看的点分十进制和32位整数之间的转换

int inet_aton(const char *cp, struct in_addr *inp);
功能:将点分十进制转换成结构体

in_addr_t inet_addr(const char *cp);
功能:将点分十进制转换成整数

char *inet_ntoa(struct in_addr in);
将IP结构体转换成字符串


in_addr_t inet_netof(struct in_addr in);
取出网络部分

in_addr_t inet_lnaof(struct in_addr in);
取出主机部分

int inet_pton(int af, const char *src, void *dst);
人看的转换成机器看的
	af 地址家族
		AF_INET
		AF_INET6

const char *inet_ntop(int af, const void *src,
				 char *dst, socklen_t size);
机器看的转换成人看的

套接字的类型
	SOCK_STREAM(TCP):提供面向连接的，可靠的数据传输服务，数据的误差错，无重复发送，且按顺序发送
	SOCK_DGRAM(UDP):提供无连接服务，不提供无错保证，数据可能无序或丢失
	SOCK_RAW:原始套接字

int socket(int domain, int type, int protocol);
功能：创建一个套接字用于通信
	domain : 通信的协议族
			PF_INET IPv4
			PF_INET6 IPv6
			PF_UNIX UNIX域
			PF_PACKET 访问数据链路层
	type :  SOCK_STREAM
			SOCK_DGRAM
			SOCK_RAW
	protocol:  让系统缺省选择，填0
返回值：成功返回非负值，它和文件描述符类似，我们叫它套接字描述符，简称套接字；失败返回-1

int bind(int sockfd,  //已经打开的套接字
	const struct sockaddr *addr,//要绑定的地址
	socklen_t addrlen); //地址的长度
功能：绑定一个地址到套接字


int listen(int sockfd, 
	int backlog); //规定内核为此套接字排队的最大连接个数 SOMAXCONN
功能：将套接字变为被动套接字(监听套接字)

int accept(int sockfd,  //已打开的监听套接字
	struct sockaddr *addr, // 客户端的地址信息
	socklen_t *addrlen);   // 客户端地址的长度
功能：客户连接返回，阻塞
返回值：成功>0,叫已连接套接字，用于和客户端进行通信，如果失败-1

int connect(int sockfd, 
		const struct sockaddr *addr, //服务器的地址
       	socklen_t addrlen); //addr的长度
功能:连接到addr机器








